"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_components_potato_PotatoGame_tsx",{

/***/ "(app-pages-browser)/./components/potato/scenes/GameOverScene.ts":
/*!***************************************************!*\
  !*** ./components/potato/scenes/GameOverScene.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameOverScene: () => (/* binding */ GameOverScene)\n/* harmony export */ });\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"(app-pages-browser)/./node_modules/phaser/dist/phaser.js\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n\nclass GameOverScene extends phaser__WEBPACK_IMPORTED_MODULE_0__.Scene {\n    preload() {\n        // Create a very simple fire texture\n        if (!this.textures.exists('fire')) {\n            const fireParticle = this.make.graphics({\n                x: 0,\n                y: 0,\n                add: false\n            });\n            // Create a simple fire particle - just a red circle\n            fireParticle.fillStyle(0xff3700, 1); // Red-orange\n            fireParticle.fillCircle(8, 8, 8);\n            // Generate fire particle texture\n            fireParticle.generateTexture('fire', 16, 16);\n        }\n    }\n    init(data) {\n        this.finalScore = data.score || 0;\n    }\n    create() {\n        // Add game over text\n        this.add.text(this.cameras.main.centerX, this.cameras.main.centerY - 80, \"GAME OVER\", {\n            fontFamily: \"Arial\",\n            fontSize: \"48px\",\n            color: \"#ffffff\",\n            fontStyle: \"bold\",\n            align: \"center\"\n        }).setOrigin(0.5);\n        // Add final score text\n        this.add.text(this.cameras.main.centerX, this.cameras.main.centerY, \"Final Score: \".concat(this.finalScore), {\n            fontFamily: \"Arial\",\n            fontSize: \"24px\",\n            color: \"#ffffff\",\n            align: \"center\"\n        }).setOrigin(0.5);\n        // Create a play again button\n        const playAgainButton = this.add.rectangle(this.cameras.main.centerX, this.cameras.main.centerY + 80, 200, 50, 0x4caf50 // Green color\n        ).setInteractive();\n        // Add button text\n        this.add.text(this.cameras.main.centerX, this.cameras.main.centerY + 80, \"PLAY AGAIN\", {\n            fontFamily: \"Arial\",\n            fontSize: \"18px\",\n            color: \"#ffffff\",\n            fontStyle: \"bold\",\n            align: \"center\"\n        }).setOrigin(0.5);\n        // Add hover effect\n        playAgainButton.on(\"pointerover\", ()=>{\n            playAgainButton.fillColor = 0x388e3c; // Darker green\n        });\n        playAgainButton.on(\"pointerout\", ()=>{\n            playAgainButton.fillColor = 0x4caf50; // Back to original green\n        });\n        // Add click event to restart the game\n        playAgainButton.on(\"pointerdown\", ()=>{\n            this.scene.start(\"StartScene\");\n        });\n        // Add a sad potato icon\n        const graphics = this.make.graphics({\n            x: 0,\n            y: 0\n        });\n        // Draw potato body\n        graphics.fillStyle(0xbf8d30, 1); // Potato brown color\n        graphics.fillEllipse(0, 0, 50, 40);\n        // Add potato \"eyes\" (sad version)\n        graphics.fillStyle(0x6d4c0c, 1); // Darker brown\n        graphics.fillCircle(-12, -7, 3);\n        graphics.fillCircle(8, -2, 3);\n        // Add sad mouth\n        graphics.lineStyle(3, 0x6d4c0c, 1);\n        graphics.beginPath();\n        graphics.arc(0, 10, 15, 0.8 * Math.PI, 0.2 * Math.PI, true);\n        graphics.strokePath();\n        // Generate the texture if it doesn't exist\n        if (!this.textures.exists(\"sad_potato\")) {\n            graphics.generateTexture(\"sad_potato\", 50, 40);\n        }\n        // Add the sad potato icon to the scene\n        const sadPotato = this.add.image(this.cameras.main.centerX, this.cameras.main.centerY - 150, \"sad_potato\");\n        // Add a simple animation to the sad potato\n        this.tweens.add({\n            targets: sadPotato,\n            angle: 10,\n            duration: 2000,\n            ease: \"Sine.easeInOut\",\n            yoyo: true,\n            repeat: -1\n        });\n    }\n    constructor(){\n        super(\"GameOverScene\"), this.finalScore = 0;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/potato/scenes/GameOverScene.ts\n"));

/***/ })

});